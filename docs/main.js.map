{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center; \\\">\\n  <h1>\\n    Get {{ title }}!\\n  </h1>\\n <br>\\n\\n<input type=\\\"text\\\" value=\\\"{{videoURL}}\\\" name=\\\"videoURL\\\"   [(ngModel)]=\\\"videoURL\\\" [(ngModel)]=\\\"videoURL\\\" id=\\\"videoURL\\\" required autocomplete=\\\"off\\\" />\\n<button (click)=\\\"this.getThumbnailUrls()\\\">Submit</button>\\n\\n\\n<div *ngIf=\\\"this.listOfThumbnails.length>0\\\" >\\n  <div *ngFor=\\\"let urlVal of listOfThumbnails, index as i\\\" >\\n    <a href=\\\"{{urlVal}}\\\">{{urlVal}}</a>\\n    <br>\\n     <img src = \\\"{{urlVal}}\\\" alt=\\\"{{urlVal}}\\\" />\\n     <br>\\n  </div>\\n</div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Youtube Thumbnails URL';\n  videoURL : string;\n  listOfThumbnails : Array<String> = [];\n\n  AppComponent(){\n    this.videoURL = document.getElementById(\"videoURL\").textContent;\n  }\n\n  getThumbnailUrls(){\n    this.listOfThumbnails = [];\n    let isValid : boolean = this.validateYoutubeURL(this.videoURL)\n      if(!isValid)\n         window.alert(\"Invalid Youtube URL\");\n      else\n        { var regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/;\n          var match = this.videoURL.match(regExp);\n          console.log(match)\n          this.listOfThumbnails[0]=(\"http://img.youtube.com/vi/\"+match[2]+\"/hqdefault.jpg\");\n          this.listOfThumbnails[1]=(\"http://img.youtube.com/vi/\"+match[2]+\"/0.jpg\");\n          this.listOfThumbnails[2]=(\"http://img.youtube.com/vi/\"+match[2]+\"/hq1.jpg\");\n          this.listOfThumbnails[3]=(\"http://img.youtube.com/vi/\"+match[2]+\"/hq2.jpg\");\n          this.listOfThumbnails[4]=(\"http://img.youtube.com/vi/\"+match[2]+\"/hq3.jpg\");\n        }\n  }\n\n  validateYoutubeURL(url:string) : boolean{\n        if (url != undefined || url != '') { \n            var regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/;\n            var match = url.match(regExp);\n            if (match && match[2].length == 11) {\n               return true;\n            }\n            else {\n               return false;\n            }\n        }\n        else \n        {\n          return false;\n        }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}